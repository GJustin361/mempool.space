#!/usr/local/bin/zsh
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:$HOME/bin
LOCKFILE="${HOME}/lock"
REPO=origin
BRANCH=master
HOSTNAME=$(hostname)

if [ -f "${LOCKFILE}" ];then
    echo "upgrade already running? check lockfile ${LOCKFILE}"
    exit 1
fi

trap 'rm -f "${LOCKFILE}"; exit $?' INT TERM EXIT
touch "${LOCKFILE}"

TAG="${BRANCH}"
[ ! -z "$1" ] && TAG=$1

echo "Upgrading mempool to ${TAG}" | wall

update_repo()
{
    local site="$1"
    echo "[*] Upgrading ${site} to ${TAG}"
    cd "$HOME/${site}" || exit 1
    git fetch "${REPO}" || exit 1
    if [ $(git tag -l "${TAG}") ];then
        git reset --hard "tags/${TAG}" || exit 1
    else
        git reset --hard "${REPO}/${TAG}" || exit 1
    fi
    export HASH=$(git rev-parse HEAD)
}

build_frontend()
{
    local site="$1"
    echo "[*] Building frontend for ${site}"
    [ -z "${HASH}" ] && exit 1
    cd "$HOME/${site}/frontend" || exit 1
    npm install --no-optional || exit 1
    npm run build || exit 1
}

build_backend()
{
    local site="$1"
    echo "[*] Building backend for ${site}"
    [ -z "${HASH}" ] && exit 1
    cd "$HOME/${site}/backend" || exit 1
    npm install --no-optional || exit 1
    npm run build || exit 1
}

ship_frontend()
{
    local site="$1"
    cd "$HOME/${site}/frontend" || exit 1
    rsync -av ./dist/mempool/browser/* "${HOME}/public_html/${site}/" || exit 1
}

export NVM_DIR="${HOME}/.nvm"
source "${NVM_DIR}/nvm.sh"

for target in mainnet liquid bisq testnet signet;do update_repo "${target}";done
for target in mainnet liquid bisq testnet signet;do build_backend "${target}";done
for target in mainnet liquid bisq;do build_frontend "${target}";done
for target in mainnet liquid bisq;do ship_frontend "${target}";done

echo "${HOSTNAME} updated to \`${TAG}\` @ \`${HASH}\`" | /usr/local/bin/keybase chat send --nonblock --channel ops mempool.space
echo "${HOSTNAME} updated to \`${TAG}\` @ \`${HASH}\`" | /usr/local/bin/keybase chat send --nonblock --channel general mempool.dev

exit 0
